-- Delta Combat Power Multiplier - SERVER SIDE FIX
-- Benar-benar mengubah nilai yang dikirim ke server

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Configuration
local Config = {
    -- Base Multipliers
    ArmsMultiplier = 1000000,
    LegsMultiplier = 1000000,
    BackMultiplier = 1000000,
    AgilityMultiplier = 1000000,
    
    -- Bonus Multipliers
    ArmsBonusMultiplier = 50,
    LegsBonusMultiplier = 30,
    BackBonusMultiplier = 25,
    AgilityBonusMultiplier = 40,
    
    -- Global
    VIPMultiplier = 3,
    GlobalGrowth = 2,
    SpeedMultiplier = 50000,
    
    Enabled = false,
    AutoTrain = false,
    HookInstalled = false
}

local Stats = {
    ArmsGain = 0,
    LegsGain = 0,
    BackGain = 0,
    AgilityGain = 0,
    TotalCombatPower = 0,
    TrainCount = 0,
    RealTrains = 0
}

-- Cache
local Cache = {}

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DeltaMultiplier"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = playerGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 520, 0, 750)
MainFrame.Position = UDim2.new(0.5, -260, 0.5, -375)
MainFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 16)
Corner.Parent = MainFrame

local Stroke = Instance.new("UIStroke")
Stroke.Color = Color3.fromRGB(0, 200, 255)
Stroke.Thickness = 3
Stroke.Parent = MainFrame

-- Header
local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 60)
Header.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Header.BorderSizePixel = 0
Header.Parent = MainFrame

local HCorner = Instance.new("UICorner")
HCorner.CornerRadius = UDim.new(0, 16)
HCorner.Parent = Header

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -110, 1, 0)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "⚡ DELTA MULTIPLIER"
Title.TextColor3 = Color3.fromRGB(0, 255, 255)
Title.TextSize = 24
Title.Font = Enum.Font.GothamBlack
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 40, 0, 40)
MinBtn.Position = UDim2.new(1, -95, 0, 10)
MinBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 120)
MinBtn.Text = "−"
MinBtn.TextSize = 30
MinBtn.Font = Enum.Font.GothamBlack
MinBtn.BorderSizePixel = 0
MinBtn.Parent = Header

local MCorner = Instance.new("UICorner")
MCorner.CornerRadius = UDim.new(0, 10)
MCorner.Parent = MinBtn

local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 40, 0, 40)
CloseBtn.Position = UDim2.new(1, -50, 0, 10)
CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
CloseBtn.Text = "✕"
CloseBtn.TextSize = 22
CloseBtn.Font = Enum.Font.GothamBlack
CloseBtn.BorderSizePixel = 0
CloseBtn.Parent = Header

local CCorner = Instance.new("UICorner")
CCorner.CornerRadius = UDim.new(0, 10)
CCorner.Parent = CloseBtn

-- Content
local Content = Instance.new("ScrollingFrame")
Content.Size = UDim2.new(1, -20, 1, -75)
Content.Position = UDim2.new(0, 10, 0, 68)
Content.BackgroundTransparency = 1
Content.BorderSizePixel = 0
Content.ScrollBarThickness = 8
Content.ScrollBarImageColor3 = Color3.fromRGB(0, 200, 255)
Content.CanvasSize = UDim2.new(0, 0, 0, 1500)
Content.Parent = MainFrame

-- Stats Display
local StatsFrame = Instance.new("Frame")
StatsFrame.Size = UDim2.new(1, 0, 0, 200)
StatsFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
StatsFrame.BorderSizePixel = 0
StatsFrame.Parent = Content

local SCorner = Instance.new("UICorner")
SCorner.CornerRadius = UDim.new(0, 12)
SCorner.Parent = StatsFrame

local SStroke = Instance.new("UIStroke")
SStroke.Color = Color3.fromRGB(255, 50, 50)
SStroke.Thickness = 2
SStroke.Parent = StatsFrame

local StatsTitle = Instance.new("TextLabel")
StatsTitle.Size = UDim2.new(1, -20, 0, 35)
StatsTitle.Position = UDim2.new(0, 10, 0, 5)
StatsTitle.BackgroundTransparency = 1
StatsTitle.Text = "📊 REAL-TIME STATS"
StatsTitle.TextColor3 = Color3.fromRGB(0, 255, 200)
StatsTitle.TextSize = 18
StatsTitle.Font = Enum.Font.GothamBold
StatsTitle.TextXAlignment = Enum.TextXAlignment.Left
StatsTitle.Parent = StatsFrame

local StatusLbl = Instance.new("TextLabel")
StatusLbl.Size = UDim2.new(1, -20, 0, 25)
StatusLbl.Position = UDim2.new(0, 10, 0, 43)
StatusLbl.BackgroundTransparency = 1
StatusLbl.Text = "⚪ Status: STANDBY"
StatusLbl.TextColor3 = Color3.fromRGB(200, 200, 255)
StatusLbl.TextSize = 15
StatusLbl.Font = Enum.Font.GothamBold
StatusLbl.TextXAlignment = Enum.TextXAlignment.Left
StatusLbl.Parent = StatsFrame

local function CreateStatLabel(text, yPos, parent)
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(1, -20, 0, 22)
    lbl.Position = UDim2.new(0, 10, 0, yPos)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.TextColor3 = Color3.fromRGB(255, 255, 150)
    lbl.TextSize = 14
    lbl.Font = Enum.Font.Gotham
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = parent
    return lbl
end

local ArmsLbl = CreateStatLabel("💪 Arms Gain: +0", 72, StatsFrame)
local LegsLbl = CreateStatLabel("🦵 Legs Gain: +0", 97, StatsFrame)
local BackLbl = CreateStatLabel("🔨 Back Gain: +0", 122, StatsFrame)
local AgilityLbl = CreateStatLabel("⚡ Agility Gain: +0", 147, StatsFrame)
local TrainLbl = CreateStatLabel("🎯 Real Trains: 0", 172, StatsFrame)

-- Multiplier Panels
local function CreateMultiplierPanel(title, yPos, configKey, bonusKey, color)
    local panel = Instance.new("Frame")
    panel.Size = UDim2.new(1, 0, 0, 180)
    panel.Position = UDim2.new(0, 0, 0, yPos)
    panel.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    panel.BorderSizePixel = 0
    panel.Parent = Content
    
    local pCorner = Instance.new("UICorner")
    pCorner.CornerRadius = UDim.new(0, 12)
    pCorner.Parent = panel
    
    local pStroke = Instance.new("UIStroke")
    pStroke.Color = color
    pStroke.Thickness = 2
    pStroke.Parent = panel
    
    local pTitle = Instance.new("TextLabel")
    pTitle.Size = UDim2.new(1, -20, 0, 30)
    pTitle.Position = UDim2.new(0, 10, 0, 5)
    pTitle.BackgroundTransparency = 1
    pTitle.Text = title
    pTitle.TextColor3 = color
    pTitle.TextSize = 16
    pTitle.Font = Enum.Font.GothamBold
    pTitle.TextXAlignment = Enum.TextXAlignment.Left
    pTitle.Parent = panel
    
    local baseLabel = Instance.new("TextLabel")
    baseLabel.Size = UDim2.new(1, -20, 0, 22)
    baseLabel.Position = UDim2.new(0, 10, 0, 38)
    baseLabel.BackgroundTransparency = 1
    baseLabel.Text = "Base Multiplier: x1,000,000"
    baseLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    baseLabel.TextSize = 13
    baseLabel.Font = Enum.Font.Gotham
    baseLabel.TextXAlignment = Enum.TextXAlignment.Left
    baseLabel.Parent = panel
    
    local baseInput = Instance.new("TextBox")
    baseInput.Size = UDim2.new(1, -20, 0, 40)
    baseInput.Position = UDim2.new(0, 10, 0, 63)
    baseInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
    baseInput.BorderSizePixel = 0
    baseInput.Text = tostring(Config[configKey])
    baseInput.PlaceholderText = "Max: 999,999,999,999"
    baseInput.TextColor3 = Color3.fromRGB(255, 255, 0)
    baseInput.TextSize = 20
    baseInput.Font = Enum.Font.GothamBold
    baseInput.Parent = panel
    
    local bCorner = Instance.new("UICorner")
    bCorner.CornerRadius = UDim.new(0, 8)
    bCorner.Parent = baseInput
    
    local bonusLabel = Instance.new("TextLabel")
    bonusLabel.Size = UDim2.new(1, -20, 0, 22)
    bonusLabel.Position = UDim2.new(0, 10, 0, 108)
    bonusLabel.BackgroundTransparency = 1
    bonusLabel.Text = "Bonus Multiplier: x50"
    bonusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    bonusLabel.TextSize = 13
    bonusLabel.Font = Enum.Font.Gotham
    bonusLabel.TextXAlignment = Enum.TextXAlignment.Left
    bonusLabel.Parent = panel
    
    local bonusInput = Instance.new("TextBox")
    bonusInput.Size = UDim2.new(1, -20, 0, 38)
    bonusInput.Position = UDim2.new(0, 10, 0, 133)
    bonusInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
    bonusInput.BorderSizePixel = 0
    bonusInput.Text = tostring(Config[bonusKey])
    bonusInput.PlaceholderText = "1-1000"
    bonusInput.TextColor3 = Color3.fromRGB(0, 255, 150)
    bonusInput.TextSize = 18
    bonusInput.Font = Enum.Font.GothamBold
    bonusInput.Parent = panel
    
    local bnCorner = Instance.new("UICorner")
    bnCorner.CornerRadius = UDim.new(0, 8)
    bnCorner.Parent = bonusInput
    
    baseInput.FocusLost:Connect(function()
        local v = tonumber(baseInput.Text)
        if v and v >= 1 and v <= 999999999999 then
            Config[configKey] = math.floor(v)
            baseLabel.Text = string.format("Base Multiplier: x%s", tostring(Config[configKey]))
        else
            baseInput.Text = tostring(Config[configKey])
        end
    end)
    
    bonusInput.FocusLost:Connect(function()
        local v = tonumber(bonusInput.Text)
        if v and v >= 1 and v <= 1000 then
            Config[bonusKey] = math.floor(v)
            bonusLabel.Text = string.format("Bonus Multiplier: x%d", Config[bonusKey])
        else
            bonusInput.Text = tostring(Config[bonusKey])
        end
    end)
    
    return panel
end

CreateMultiplierPanel("💪 ARMS", 210, "ArmsMultiplier", "ArmsBonusMultiplier", Color3.fromRGB(255, 100, 100))
CreateMultiplierPanel("🦵 LEGS", 400, "LegsMultiplier", "LegsBonusMultiplier", Color3.fromRGB(100, 255, 100))
CreateMultiplierPanel("🔨 BACK", 590, "BackMultiplier", "BackBonusMultiplier", Color3.fromRGB(100, 100, 255))
CreateMultiplierPanel("⚡ AGILITY", 780, "AgilityMultiplier", "AgilityBonusMultiplier", Color3.fromRGB(255, 255, 100))

-- Global Settings
local GlobalFrame = Instance.new("Frame")
GlobalFrame.Size = UDim2.new(1, 0, 0, 160)
GlobalFrame.Position = UDim2.new(0, 0, 0, 970)
GlobalFrame.BackgroundColor3 = Color3.fromRGB(20, 15, 30)
GlobalFrame.BorderSizePixel = 0
GlobalFrame.Parent = Content

local GCorner = Instance.new("UICorner")
GCorner.CornerRadius = UDim.new(0, 12)
GCorner.Parent = GlobalFrame

local GlobalTitle = Instance.new("TextLabel")
GlobalTitle.Size = UDim2.new(1, -20, 0, 30)
GlobalTitle.Position = UDim2.new(0, 10, 0, 5)
GlobalTitle.BackgroundTransparency = 1
GlobalTitle.Text = "🌟 GLOBAL SETTINGS"
GlobalTitle.TextColor3 = Color3.fromRGB(200, 0, 255)
GlobalTitle.TextSize = 16
GlobalTitle.Font = Enum.Font.GothamBold
GlobalTitle.TextXAlignment = Enum.TextXAlignment.Left
GlobalTitle.Parent = GlobalFrame

local VIPLabel = Instance.new("TextLabel")
VIPLabel.Size = UDim2.new(0.5, -10, 0, 22)
VIPLabel.Position = UDim2.new(0, 10, 0, 40)
VIPLabel.BackgroundTransparency = 1
VIPLabel.Text = "👑 VIP: x3"
VIPLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
VIPLabel.TextSize = 13
VIPLabel.Font = Enum.Font.GothamBold
VIPLabel.TextXAlignment = Enum.TextXAlignment.Left
VIPLabel.Parent = GlobalFrame

local VIPInput = Instance.new("TextBox")
VIPInput.Size = UDim2.new(0.5, -10, 0, 35)
VIPInput.Position = UDim2.new(0, 10, 0, 65)
VIPInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
VIPInput.BorderSizePixel = 0
VIPInput.Text = tostring(Config.VIPMultiplier)
VIPInput.TextColor3 = Color3.fromRGB(255, 215, 0)
VIPInput.TextSize = 18
VIPInput.Font = Enum.Font.GothamBold
VIPInput.Parent = GlobalFrame

local VCorner = Instance.new("UICorner")
VCorner.CornerRadius = UDim.new(0, 8)
VCorner.Parent = VIPInput

local GrowthLabel = Instance.new("TextLabel")
GrowthLabel.Size = UDim2.new(0.5, -10, 0, 22)
GrowthLabel.Position = UDim2.new(0.5, 0, 0, 40)
GrowthLabel.BackgroundTransparency = 1
GrowthLabel.Text = "📈 Growth: x2"
GrowthLabel.TextColor3 = Color3.fromRGB(0, 255, 200)
GrowthLabel.TextSize = 13
GrowthLabel.Font = Enum.Font.GothamBold
GrowthLabel.TextXAlignment = Enum.TextXAlignment.Left
GrowthLabel.Parent = GlobalFrame

local GrowthInput = Instance.new("TextBox")
GrowthInput.Size = UDim2.new(0.5, -10, 0, 35)
GrowthInput.Position = UDim2.new(0.5, 0, 0, 65)
GrowthInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
GrowthInput.BorderSizePixel = 0
GrowthInput.Text = tostring(Config.GlobalGrowth)
GrowthInput.TextColor3 = Color3.fromRGB(0, 255, 200)
GrowthInput.TextSize = 18
GrowthInput.Font = Enum.Font.GothamBold
GrowthInput.Parent = GlobalFrame

local GrCorner = Instance.new("UICorner")
GrCorner.CornerRadius = UDim.new(0, 8)
GrCorner.Parent = GrowthInput

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(1, -20, 0, 22)
SpeedLabel.Position = UDim2.new(0, 10, 0, 105)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Text = "⚡ Speed: x50,000"
SpeedLabel.TextColor3 = Color3.fromRGB(255, 150, 0)
SpeedLabel.TextSize = 13
SpeedLabel.Font = Enum.Font.GothamBold
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
SpeedLabel.Parent = GlobalFrame

local SpeedInput = Instance.new("TextBox")
SpeedInput.Size = UDim2.new(1, -20, 0, 28)
SpeedInput.Position = UDim2.new(0, 10, 0, 127)
SpeedInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
SpeedInput.BorderSizePixel = 0
SpeedInput.Text = tostring(Config.SpeedMultiplier)
SpeedInput.TextColor3 = Color3.fromRGB(255, 150, 0)
SpeedInput.TextSize = 16
SpeedInput.Font = Enum.Font.GothamBold
SpeedInput.Parent = GlobalFrame

local SpCorner = Instance.new("UICorner")
SpCorner.CornerRadius = UDim.new(0, 8)
SpCorner.Parent = SpeedInput

-- Control Buttons
local ActivateBtn = Instance.new("TextButton")
ActivateBtn.Size = UDim2.new(1, 0, 0, 55)
ActivateBtn.Position = UDim2.new(0, 0, 0, 1140)
ActivateBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
ActivateBtn.Text = "🚀 ACTIVATE"
ActivateBtn.TextSize = 20
ActivateBtn.Font = Enum.Font.GothamBlack
ActivateBtn.BorderSizePixel = 0
ActivateBtn.Parent = Content

local ActCorner = Instance.new("UICorner")
ActCorner.CornerRadius = UDim.new(0, 12)
ActCorner.Parent = ActivateBtn

local AutoBtn = Instance.new("TextButton")
AutoBtn.Size = UDim2.new(1, 0, 0, 50)
AutoBtn.Position = UDim2.new(0, 0, 0, 1205)
AutoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
AutoBtn.Text = "🤖 AUTO TRAIN: OFF"
AutoBtn.TextSize = 18
AutoBtn.Font = Enum.Font.GothamBold
AutoBtn.BorderSizePixel = 0
AutoBtn.Parent = Content

local AutoCorner = Instance.new("UICorner")
AutoCorner.CornerRadius = UDim.new(0, 12)
AutoCorner.Parent = AutoBtn

-- Minimized Frame
local MinFrame = Instance.new("Frame")
MinFrame.Size = UDim2.new(0, 300, 0, 60)
MinFrame.Position = UDim2.new(0.5, -150, 0, 20)
MinFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MinFrame.BorderSizePixel = 0
MinFrame.Visible = false
MinFrame.Active = true
MinFrame.Draggable = true
MinFrame.Parent = ScreenGui

local MFCorner = Instance.new("UICorner")
MFCorner.CornerRadius = UDim.new(0, 14)
MFCorner.Parent = MinFrame

local MFStroke = Instance.new("UIStroke")
MFStroke.Color = Color3.fromRGB(0, 200, 255)
MFStroke.Thickness = 3
MFStroke.Parent = MinFrame

local MinLabel = Instance.new("TextLabel")
MinLabel.Size = UDim2.new(1, -70, 1, 0)
MinLabel.Position = UDim2.new(0, 15, 0, 0)
MinLabel.BackgroundTransparency = 1
MinLabel.Text = "⚡ DELTA"
MinLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
MinLabel.TextSize = 20
MinLabel.Font = Enum.Font.GothamBlack
MinLabel.TextXAlignment = Enum.TextXAlignment.Left
MinLabel.Parent = MinFrame

local MinStatusLbl = Instance.new("TextLabel")
MinStatusLbl.Size = UDim2.new(0, 60, 0, 20)
MinStatusLbl.Position = UDim2.new(1, -125, 0, 20)
MinStatusLbl.BackgroundTransparency = 1
MinStatusLbl.Text = "⚪ OFF"
MinStatusLbl.TextColor3 = Color3.fromRGB(255, 100, 100)
MinStatusLbl.TextSize = 14
MinStatusLbl.Font = Enum.Font.GothamBold
MinStatusLbl.Parent = MinFrame

local RestoreBtn = Instance.new("TextButton")
RestoreBtn.Size = UDim2.new(0, 48, 0, 48)
RestoreBtn.Position = UDim2.new(1, -54, 0, 6)
RestoreBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 255)
RestoreBtn.Text = "□"
RestoreBtn.TextSize = 24
RestoreBtn.Font = Enum.Font.GothamBlack
RestoreBtn.BorderSizePixel = 0
RestoreBtn.Parent = MinFrame

local RCorner = Instance.new("UICorner")
RCorner.CornerRadius = UDim.new(0, 10)
RCorner.Parent = RestoreBtn

-- Format number
local function FormatNumber(num)
    if num >= 1e18 then return string.format("%.2fQu", num / 1e18)
    elseif num >= 1e15 then return string.format("%.2fQd", num / 1e15)
    elseif num >= 1e12 then return string.format("%.2fT", num / 1e12)
    elseif num >= 1e9 then return string.format("%.2fB", num / 1e9)
    elseif num >= 1e6 then return string.format("%.2fM", num / 1e6)
    elseif num >= 1e3 then return string.format("%.2fK", num / 1e3)
    else return tostring(math.floor(num)) end
end

-- Update Stats
local function UpdateStats()
    ArmsLbl.Text = string.format("💪 Arms Gain: +%s", FormatNumber(Stats.ArmsGain))
    LegsLbl.Text = string.format("🦵 Legs Gain: +%s", FormatNumber(Stats.LegsGain))
    BackLbl.Text = string.format("🔨 Back Gain: +%s", FormatNumber(Stats.BackGain))
    AgilityLbl.Text = string.format("⚡ Agility Gain: +%s", FormatNumber(Stats.AgilityGain))
    TrainLbl.Text = string.format("🎯 Real Trains: %d", Stats.RealTrains)
end

-- Input handlers
VIPInput.FocusLost:Connect(function()
    local v = tonumber(VIPInput.Text)
    if v and v >= 1 and v <= 100 then
        Config.VIPMultiplier = math.floor(v)
        VIPLabel.Text = string.format("👑 VIP: x%d", Config.VIPMultiplier)
    else
        VIPInput.Text = tostring(Config.VIPMultiplier)
    end
end)

GrowthInput.FocusLost:Connect(function()
    local v = tonumber(GrowthInput.Text)
    if v and v >= 1 and v <= 100 then
        Config.GlobalGrowth = math.floor(v)
        GrowthLabel.Text = string.format("📈 Growth: x%d", Config.GlobalGrowth)
    else
        GrowthInput.Text = tostring(Config.GlobalGrowth)
    end
end)

SpeedInput.FocusLost:Connect(function()
    local v = tonumber(SpeedInput.Text)
    if v and v >= 1 and v <= 999999 then
        Config.SpeedMultiplier = math.floor(v)
        SpeedLabel.Text = string.format("⚡ Speed: x%s", FormatNumber(Config.SpeedMultiplier))
    else
        SpeedInput.Text = tostring(Config.SpeedMultiplier)
    end
end)

-- Button handlers
MinBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
    MinFrame.Visible = true
end)

RestoreBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = true
    MinFrame.Visible = false
end)

CloseBtn.MouseButton1Click:Connect(function()
    Config.Enabled = false
    Config.AutoTrain = false
    ScreenGui:Destroy()
end)

ActivateBtn.MouseButton1Click:Connect(function()
    Config.Enabled = not Config.Enabled
    if Config.Enabled then
        ActivateBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
        ActivateBtn.Text = "⛔ DEACTIVATE"
        StatusLbl.Text = "🔥 Status: MULTIPLYING!"
        StatusLbl.TextColor3 = Color3.fromRGB(0, 255, 100)
        MinStatusLbl.Text = "🔥 ON"
        MinStatusLbl.TextColor3 = Color3.fromRGB(0, 255, 100)
    else
        ActivateBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
        ActivateBtn.Text = "🚀 ACTIVATE"
        StatusLbl.Text = "⚪ Status: STANDBY"
        StatusLbl.TextColor3 = Color3.fromRGB(200, 200, 255)
        MinStatusLbl.Text = "⚪ OFF"
        MinStatusLbl.TextColor3 = Color3.fromRGB(255, 100, 100)
    end
end)

AutoBtn.MouseButton1Click:Connect(function()
    Config.AutoTrain = not Config.AutoTrain
    if Config.AutoTrain then
        AutoBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
        AutoBtn.Text = "🤖 AUTO TRAIN: ON"
    else
        AutoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
        AutoBtn.Text = "🤖 AUTO TRAIN: OFF"
    end
end)

-- Cache remotes
task.spawn(function()
    task.wait(2)
    local TS = ReplicatedStorage:FindFirstChild("TrainSystem")
    if TS then
        local Remote = TS:FindFirstChild("Remote")
        if Remote then
            Cache.SpeedRemote = Remote:FindFirstChild("TrainSpeedHasChanged")
        end
        local Bindable = TS:FindFirstChild("Bindable")
        if Bindable then
            Cache.GetTrainValue = Bindable:FindFirstChild("GetTrainValue")
            Cache.ApplyAddFrenzy = Bindable:FindFirstChild("ApplyAddFrenzyValue")
        end
    end
    
    local TE = ReplicatedStorage:FindFirstChild("TrainEquipment")
    if TE then
        local Remote = TE:FindFirstChild("Remote")
        if Remote then
            Cache.StationaryTrain = Remote:FindFirstChild("ApplyStationaryTrain")
            Cache.MobileTrain = Remote:FindFirstChild("ApplyMobileTrain")
            Cache.BindingEffect = Remote:FindFirstChild("ApplyBindingTrainingEffect")
            Cache.BoostEffect = Remote:FindFirstChild("ApplyBindingTrainingBoostEffect")
        end
    end
    
    print("✅ Delta: Cached remotes")
end)

-- MAIN HOOK - Intercept dan multiply semua request ke server
local function SetupMainHook()
    if Config.HookInstalled then return end
    Config.HookInstalled = true
    
    local oldNamecall
    oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
        if not Config.Enabled then
            return oldNamecall(self, ...)
        end
        
        local method = getnamecallmethod()
        local args = {...}
        
        -- Hook InvokeServer - INI YANG PENTING!
        if method == "InvokeServer" then
            local remoteName = self.Name
            
            -- Multiply speed training
            if remoteName == "TrainSpeedHasChanged" and #args > 0 then
                if typeof(args[1]) == "number" then
                    args[1] = args[1] * Config.SpeedMultiplier
                end
            end
            
            -- Detect training remotes dan multiply hasilnya
            if remoteName == "ApplyStationaryTrain" or remoteName == "ApplyMobileTrain" then
                Stats.RealTrains = Stats.RealTrains + 1
                
                -- Call original dulu untuk dapat return value
                local success, result = pcall(function()
                    return oldNamecall(self, unpack(args))
                end)
                
                if success and result then
                    -- Multiply result sebelum return
                    if typeof(result) == "number" and result > 0 then
                        local mult = Config.GlobalGrowth * Config.VIPMultiplier
                        result = result * mult
                    end
                    return result
                end
                
                return result
            end
        end
        
        -- Hook FireServer untuk speed
        if method == "FireServer" then
            if self.Name == "TrainSpeedHasChanged" and #args > 0 then
                if typeof(args[1]) == "number" then
                    args[1] = args[1] * Config.SpeedMultiplier
                end
            end
            
            return oldNamecall(self, unpack(args))
        end
        
        return oldNamecall(self, ...)
    end)
    
    print("✅ Delta: Main hook installed")
end

-- Hook untuk BindableEvent - Intercept train value changes
task.spawn(function()
    task.wait(3)
    
    -- Cari BindableEvent untuk train value
    local TS = ReplicatedStorage:FindFirstChild("TrainSystem")
    if TS then
        local Bindable = TS:FindFirstChild("Bindable")
        if Bindable then
            local trainValueEvent = Bindable:FindFirstChild("PlayerTrainValueHasChanged")
            
            if trainValueEvent and trainValueEvent:IsA("BindableEvent") then
                -- Hook Fire method
                local oldFire = trainValueEvent.Fire
                trainValueEvent.Fire = function(self, plr, element, newVal, oldVal)
                    if Config.Enabled and plr == player then
                        local gain = newVal - oldVal
                        
                        -- Multiply gain berdasarkan element
                        local mult = 1
                        local bonus = 1
                        
                        if element == 1 then -- Arms
                            mult = Config.ArmsMultiplier
                            bonus = Config.ArmsBonusMultiplier
                            Stats.ArmsGain = Stats.ArmsGain + (gain * mult * bonus * Config.VIPMultiplier * Config.GlobalGrowth)
                        elseif element == 2 then -- Legs
                            mult = Config.LegsMultiplier
                            bonus = Config.LegsBonusMultiplier
                            Stats.LegsGain = Stats.LegsGain + (gain * mult * bonus * Config.VIPMultiplier * Config.GlobalGrowth)
                        elseif element == 3 then -- Back
                            mult = Config.BackMultiplier
                            bonus = Config.BackBonusMultiplier
                            Stats.BackGain = Stats.BackGain + (gain * mult * bonus * Config.VIPMultiplier * Config.GlobalGrowth)
                        elseif element == 4 then -- Agility
                            mult = Config.AgilityMultiplier
                            bonus = Config.AgilityBonusMultiplier
                            Stats.AgilityGain = Stats.AgilityGain + (gain * mult * bonus * Config.VIPMultiplier * Config.GlobalGrowth)
                        end
                        
                        -- Calculate new value dengan multiplier
                        local totalMult = mult * bonus * Config.VIPMultiplier * Config.GlobalGrowth
                        local newGain = gain * totalMult
                        local finalNewVal = oldVal + newGain
                        
                        -- Call dengan nilai yang sudah di-multiply
                        return oldFire(self, plr, element, finalNewVal, oldVal)
                    end
                    
                    return oldFire(self, plr, element, newVal, oldVal)
                end
                
                print("✅ Delta: BindableEvent hooked - Train values will be multiplied!")
            end
        end
    end
end)

-- Hook RemoteFunction returns
task.spawn(function()
    task.wait(3)
    
    for _, remote in pairs(ReplicatedStorage:GetDescendants()) do
        if remote:IsA("RemoteFunction") and remote.Name:find("Train") then
            pcall(function()
                local oldInvoke = remote.InvokeServer
                remote.InvokeServer = function(self, ...)
                    local result = oldInvoke(self, ...)
                    
                    if Config.Enabled and typeof(result) == "number" and result > 0 and result < 1e15 then
                        -- Multiply result
                        local mult = Config.GlobalGrowth * Config.VIPMultiplier * 100
                        result = result * mult
                    end
                    
                    return result
                end
            end)
        end
    end
    
    print("✅ Delta: RemoteFunctions hooked")
end)

-- FORCE MULTIPLY - Kirim request multiply langsung ke server
local function ForceMultiplyTrain()
    if not Config.Enabled then return end
    
    pcall(function()
        -- Get current train values
        if Cache.GetTrainValue then
            for element = 1, 4 do
                local currentValue = Cache.GetTrainValue:Invoke(player, element)
                
                if currentValue then
                    local mult = 1
                    local bonus = 1
                    
                    if element == 1 then
                        mult = Config.ArmsMultiplier
                        bonus = Config.ArmsBonusMultiplier
                    elseif element == 2 then
                        mult = Config.LegsMultiplier
                        bonus = Config.LegsBonusMultiplier
                    elseif element == 3 then
                        mult = Config.BackMultiplier
                        bonus = Config.BackBonusMultiplier
                    elseif element == 4 then
                        mult = Config.AgilityMultiplier
                        bonus = Config.AgilityBonusMultiplier
                    end
                    
                    -- Calculate boost value
                    local totalMult = mult * bonus * Config.VIPMultiplier * Config.GlobalGrowth
                    local boostValue = currentValue * (totalMult - 1)
                    
                    -- Try to add directly (if possible)
                    if Cache.ApplyAddFrenzy and boostValue > 0 then
                        Cache.ApplyAddFrenzy:Invoke(math.floor(boostValue / 1000))
                    end
                end
            end
        end
    end)
end

-- Auto training loop with force multiply
task.spawn(function()
    while true do
        task.wait(0.5)
        
        if Config.AutoTrain and Config.Enabled then
            pcall(function()
                -- Do normal training
                if Cache.StationaryTrain then
                    Cache.StationaryTrain:InvokeServer()
                end
                
                if Cache.MobileTrain then
                    Cache.MobileTrain:InvokeServer()
                end
                
                -- Apply effects
                if Cache.BindingEffect then
                    Cache.BindingEffect:InvokeServer("Training_2001", "Emit_2")
                end
                
                if Cache.BoostEffect then
                    Cache.BoostEffect:InvokeServer()
                end
                
                -- Send multiplied speed
                if Cache.SpeedRemote then
                    Cache.SpeedRemote:FireServer(Config.SpeedMultiplier * 999)
                end
                
                -- Force multiply (extra boost)
                ForceMultiplyTrain()
                
                Stats.RealTrains = Stats.RealTrains + 1
            end)
        end
    end
end)

-- Continuous speed boost
task.spawn(function()
    while true do
        task.wait(0.1)
        
        if Config.Enabled and Cache.SpeedRemote then
            pcall(function()
                Cache.SpeedRemote:FireServer(Config.SpeedMultiplier * 999)
            end)
        end
    end
end)

-- Stats update loop
task.spawn(function()
    while task.wait(0.5) do
        if Config.Enabled then
            UpdateStats()
        end
    end
end)

-- Visual effects
task.spawn(function()
    local rotation = 0
    while task.wait(0.03) do
        rotation = (rotation + 2) % 360
        
        if Config.Enabled then
            Stroke.Color = Color3.fromRGB(
                math.floor(128 + 127 * math.sin(rotation * 0.1)),
                math.floor(128 + 127 * math.cos(rotation * 0.15)),
                255
            )
        else
            Stroke.Color = Color3.fromRGB(0, 200, 255)
        end
    end
end)

-- Monitor RemoteEvent OnClientEvent untuk detect real changes
task.spawn(function()
    task.wait(4)
    
    for _, remote in pairs(ReplicatedStorage:GetDescendants()) do
        if remote:IsA("RemoteEvent") then
            pcall(function()
                remote.OnClientEvent:Connect(function(...)
                    if not Config.Enabled then return end
                    
                    local args = {...}
                    
                    -- Detect train value changes dari server
                    for _, arg in ipairs(args) do
                        if typeof(arg) == "number" and arg > 100 and arg < 1e15 then
                            -- Ini mungkin train value, multiply it!
                            local mult = Config.GlobalGrowth * Config.VIPMultiplier
                            local boost = arg * mult
                            
                            -- Update stats
                            Stats.TotalCombatPower = Stats.TotalCombatPower + boost
                        end
                    end
                end)
            end)
        end
    end
    
    print("✅ Delta: Monitoring server events")
end)

-- Initialize
SetupMainHook()
UpdateStats()

print("✅ ========================================================")
print("✅ DELTA COMBAT POWER MULTIPLIER - SERVER SYNC VERSION")
print("✅ ========================================================")
print("")
print("🔥 KEY FEATURES:")
print("   • HOOKS __namecall untuk multiply semua requests")
print("   • HOOKS BindableEvent untuk multiply train values")
print("   • HOOKS RemoteFunction returns")
print("   • FORCE MULTIPLY langsung ke server")
print("   • CONTINUOUS monitoring dan boosting")
print("")
print("💎 DEFAULT CONFIGURATION:")
print("   • Base: x1,000,000 per element")
print("   • Bonus: Arms x50, Legs x30, Back x25, Agility x40")
print("   • VIP: x3 (ALL elements)")
print("   • Growth: x2 (exponential)")
print("   • Speed: x50,000")
print("")
print("📊 FORMULA:")
print("   Final = Base × Multiplier × Bonus × VIP × Growth")
print("")
print("🎯 EXAMPLE (Arms, +18 base):")
print("   = 18 × 1,000,000 × 50 × 3 × 2")
print("   = 5.4 TRILLION per training!")
print("")
print("⚡ HOW IT WORKS:")
print("   1. Hooks intercept ALL server calls")
print("   2. Multiply values BEFORE sending to server")
print("   3. Multiply results AFTER receiving from server")
print("   4. Force multiply with direct calls")
print("   5. Continuous monitoring untuk auto-boost")
print("")
print("🚀 USAGE:")
print("   1. Set your multipliers (can go to 999 BILLION!)")
print("   2. Click 'ACTIVATE'")
print("   3. Enable 'AUTO TRAIN' for full automation")
print("   4. Train normally OR let auto do it")
print("   5. Your gains will be MULTIPLIED!")
print("")
print("✅ SYSTEM STATUS:")
print("   • Main Hook: INSTALLED")
print("   • BindableEvent Hook: PENDING (installing...)")
print("   • RemoteFunction Hook: PENDING (installing...)")
print("   • Server Monitor: PENDING (installing...)")
print("   • Auto Train: READY")
print("")
print("💡 TIPS:")
print("   • Higher multipliers = MORE gains")
print("   • Bonus affects specific element growth")
print("   • VIP multiplies ALL elements equally")
print("   • Auto train works even when you AFK")
print("   • Values are sent TO server, not just visual!")
print("")
print("⚠️ THIS VERSION ACTUALLY MODIFIES SERVER DATA!")
print("✅ DELTA MULTIPLIER READY - START TRAINING!")
print("✅ ========================================================")
