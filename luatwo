-- Delta Combat Power Multiplier
-- Exponential Growth System with Bonus Multipliers

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Configuration dengan Growth System
local Config = {
    -- Base Multipliers (bisa ditingkatkan sampai triliun)
    ArmsMultiplier = 1000000,      -- 1 juta default
    LegsMultiplier = 1000000,
    BackMultiplier = 1000000,
    AgilityMultiplier = 1000000,
    
    -- Bonus Multipliers (seperti ArmTrainBonus, VIP, dll)
    ArmsBonusMultiplier = 50,      -- x50 seperti ArmTrainBonus
    LegsBonusMultiplier = 30,
    BackBonusMultiplier = 25,      -- x25 seperti BackTrainBonus
    AgilityBonusMultiplier = 40,
    
    -- VIP & Global Bonus
    VIPMultiplier = 3,             -- VIP = ALL Train x3
    GlobalGrowth = 2,              -- Growth x2 per cycle
    
    SpeedMultiplier = 50000,
    Enabled = false,
    AutoTrain = false
}

local Stats = {
    ArmsGain = 0,
    LegsGain = 0,
    BackGain = 0,
    AgilityGain = 0,
    TotalCombatPower = 0,
    TrainCount = 0
}

-- Cache Remotes
local Cache = {}

-- GUI Creation
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DeltaMultiplier"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = playerGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 520, 0, 750)
MainFrame.Position = UDim2.new(0.5, -260, 0.5, -375)
MainFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 16)
Corner.Parent = MainFrame

local Stroke = Instance.new("UIStroke")
Stroke.Color = Color3.fromRGB(0, 200, 255)
Stroke.Thickness = 3
Stroke.Parent = MainFrame

-- Header
local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 60)
Header.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Header.BorderSizePixel = 0
Header.Parent = MainFrame

local HCorner = Instance.new("UICorner")
HCorner.CornerRadius = UDim.new(0, 16)
HCorner.Parent = Header

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -110, 1, 0)
Title.Position = UDim2.new(0, 15, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "⚡ DELTA MULTIPLIER"
Title.TextColor3 = Color3.fromRGB(0, 255, 255)
Title.TextSize = 24
Title.Font = Enum.Font.GothamBlack
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

-- Minimize Button
local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 40, 0, 40)
MinBtn.Position = UDim2.new(1, -95, 0, 10)
MinBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 120)
MinBtn.Text = "−"
MinBtn.TextSize = 30
MinBtn.Font = Enum.Font.GothamBlack
MinBtn.BorderSizePixel = 0
MinBtn.Parent = Header

local MCorner = Instance.new("UICorner")
MCorner.CornerRadius = UDim.new(0, 10)
MCorner.Parent = MinBtn

-- Close Button
local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 40, 0, 40)
CloseBtn.Position = UDim2.new(1, -50, 0, 10)
CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
CloseBtn.Text = "✕"
CloseBtn.TextSize = 22
CloseBtn.Font = Enum.Font.GothamBlack
CloseBtn.BorderSizePixel = 0
CloseBtn.Parent = Header

local CCorner = Instance.new("UICorner")
CCorner.CornerRadius = UDim.new(0, 10)
CCorner.Parent = CloseBtn

-- Content ScrollFrame
local Content = Instance.new("ScrollingFrame")
Content.Size = UDim2.new(1, -20, 1, -75)
Content.Position = UDim2.new(0, 10, 0, 68)
Content.BackgroundTransparency = 1
Content.BorderSizePixel = 0
Content.ScrollBarThickness = 8
Content.ScrollBarImageColor3 = Color3.fromRGB(0, 200, 255)
Content.CanvasSize = UDim2.new(0, 0, 0, 1500)
Content.Parent = MainFrame

-- Stats Display
local StatsFrame = Instance.new("Frame")
StatsFrame.Size = UDim2.new(1, 0, 0, 200)
StatsFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
StatsFrame.BorderSizePixel = 0
StatsFrame.Parent = Content

local SCorner = Instance.new("UICorner")
SCorner.CornerRadius = UDim.new(0, 12)
SCorner.Parent = StatsFrame

local StatsTitle = Instance.new("TextLabel")
StatsTitle.Size = UDim2.new(1, -20, 0, 35)
StatsTitle.Position = UDim2.new(0, 10, 0, 5)
StatsTitle.BackgroundTransparency = 1
StatsTitle.Text = "📊 COMBAT POWER STATS"
StatsTitle.TextColor3 = Color3.fromRGB(0, 255, 200)
StatsTitle.TextSize = 18
StatsTitle.Font = Enum.Font.GothamBold
StatsTitle.TextXAlignment = Enum.TextXAlignment.Left
StatsTitle.Parent = StatsFrame

local StatusLbl = Instance.new("TextLabel")
StatusLbl.Size = UDim2.new(1, -20, 0, 25)
StatusLbl.Position = UDim2.new(0, 10, 0, 43)
StatusLbl.BackgroundTransparency = 1
StatusLbl.Text = "⚪ Status: STANDBY"
StatusLbl.TextColor3 = Color3.fromRGB(200, 200, 255)
StatusLbl.TextSize = 15
StatusLbl.Font = Enum.Font.GothamBold
StatusLbl.TextXAlignment = Enum.TextXAlignment.Left
StatusLbl.Parent = StatsFrame

local function CreateStatLabel(text, yPos, parent)
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(1, -20, 0, 22)
    lbl.Position = UDim2.new(0, 10, 0, yPos)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.TextColor3 = Color3.fromRGB(255, 255, 150)
    lbl.TextSize = 14
    lbl.Font = Enum.Font.Gotham
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = parent
    return lbl
end

local ArmsLbl = CreateStatLabel("💪 Arms: +0", 72, StatsFrame)
local LegsLbl = CreateStatLabel("🦵 Legs: +0", 97, StatsFrame)
local BackLbl = CreateStatLabel("🔨 Back: +0", 122, StatsFrame)
local AgilityLbl = CreateStatLabel("⚡ Agility: +0", 147, StatsFrame)
local TotalLbl = CreateStatLabel("🔥 Total CP: 0", 172, StatsFrame)

-- Function to create multiplier panel
local function CreateMultiplierPanel(title, yPos, configKey, bonusKey, color)
    local panel = Instance.new("Frame")
    panel.Size = UDim2.new(1, 0, 0, 180)
    panel.Position = UDim2.new(0, 0, 0, yPos)
    panel.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    panel.BorderSizePixel = 0
    panel.Parent = Content
    
    local pCorner = Instance.new("UICorner")
    pCorner.CornerRadius = UDim.new(0, 12)
    pCorner.Parent = panel
    
    local pStroke = Instance.new("UIStroke")
    pStroke.Color = color
    pStroke.Thickness = 2
    pStroke.Parent = panel
    
    local pTitle = Instance.new("TextLabel")
    pTitle.Size = UDim2.new(1, -20, 0, 30)
    pTitle.Position = UDim2.new(0, 10, 0, 5)
    pTitle.BackgroundTransparency = 1
    pTitle.Text = title
    pTitle.TextColor3 = color
    pTitle.TextSize = 16
    pTitle.Font = Enum.Font.GothamBold
    pTitle.TextXAlignment = Enum.TextXAlignment.Left
    pTitle.Parent = panel
    
    -- Base Multiplier
    local baseLabel = Instance.new("TextLabel")
    baseLabel.Size = UDim2.new(1, -20, 0, 22)
    baseLabel.Position = UDim2.new(0, 10, 0, 38)
    baseLabel.BackgroundTransparency = 1
    baseLabel.Text = "Base Multiplier: x1,000,000"
    baseLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    baseLabel.TextSize = 13
    baseLabel.Font = Enum.Font.Gotham
    baseLabel.TextXAlignment = Enum.TextXAlignment.Left
    baseLabel.Parent = panel
    
    local baseInput = Instance.new("TextBox")
    baseInput.Size = UDim2.new(1, -20, 0, 40)
    baseInput.Position = UDim2.new(0, 10, 0, 63)
    baseInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
    baseInput.BorderSizePixel = 0
    baseInput.Text = tostring(Config[configKey])
    baseInput.PlaceholderText = "Max: 999,999,999,999"
    baseInput.TextColor3 = Color3.fromRGB(255, 255, 0)
    baseInput.TextSize = 20
    baseInput.Font = Enum.Font.GothamBold
    baseInput.Parent = panel
    
    local bCorner = Instance.new("UICorner")
    bCorner.CornerRadius = UDim.new(0, 8)
    bCorner.Parent = baseInput
    
    -- Bonus Multiplier
    local bonusLabel = Instance.new("TextLabel")
    bonusLabel.Size = UDim2.new(1, -20, 0, 22)
    bonusLabel.Position = UDim2.new(0, 10, 0, 108)
    bonusLabel.BackgroundTransparency = 1
    bonusLabel.Text = "Bonus Multiplier (TrainBonus): x50"
    bonusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    bonusLabel.TextSize = 13
    bonusLabel.Font = Enum.Font.Gotham
    bonusLabel.TextXAlignment = Enum.TextXAlignment.Left
    bonusLabel.Parent = panel
    
    local bonusInput = Instance.new("TextBox")
    bonusInput.Size = UDim2.new(1, -20, 0, 38)
    bonusInput.Position = UDim2.new(0, 10, 0, 133)
    bonusInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
    bonusInput.BorderSizePixel = 0
    bonusInput.Text = tostring(Config[bonusKey])
    bonusInput.PlaceholderText = "1-1000"
    bonusInput.TextColor3 = Color3.fromRGB(0, 255, 150)
    bonusInput.TextSize = 18
    bonusInput.Font = Enum.Font.GothamBold
    bonusInput.Parent = panel
    
    local bnCorner = Instance.new("UICorner")
    bnCorner.CornerRadius = UDim.new(0, 8)
    bnCorner.Parent = bonusInput
    
    -- Update handlers
    baseInput.FocusLost:Connect(function()
        local v = tonumber(baseInput.Text)
        if v and v >= 1 and v <= 999999999999 then
            Config[configKey] = math.floor(v)
            baseLabel.Text = string.format("Base Multiplier: x%s", string.format("%d", Config[configKey]))
        else
            baseInput.Text = tostring(Config[configKey])
        end
    end)
    
    bonusInput.FocusLost:Connect(function()
        local v = tonumber(bonusInput.Text)
        if v and v >= 1 and v <= 1000 then
            Config[bonusKey] = math.floor(v)
            bonusLabel.Text = string.format("Bonus Multiplier (TrainBonus): x%d", Config[bonusKey])
        else
            bonusInput.Text = tostring(Config[bonusKey])
        end
    end)
    
    return panel
end

-- Create multiplier panels
CreateMultiplierPanel("💪 ARMS", 210, "ArmsMultiplier", "ArmsBonusMultiplier", Color3.fromRGB(255, 100, 100))
CreateMultiplierPanel("🦵 LEGS", 400, "LegsMultiplier", "LegsBonusMultiplier", Color3.fromRGB(100, 255, 100))
CreateMultiplierPanel("🔨 BACK", 590, "BackMultiplier", "BackBonusMultiplier", Color3.fromRGB(100, 100, 255))
CreateMultiplierPanel("⚡ AGILITY", 780, "AgilityMultiplier", "AgilityBonusMultiplier", Color3.fromRGB(255, 255, 100))

-- VIP & Global Settings
local GlobalFrame = Instance.new("Frame")
GlobalFrame.Size = UDim2.new(1, 0, 0, 160)
GlobalFrame.Position = UDim2.new(0, 0, 0, 970)
GlobalFrame.BackgroundColor3 = Color3.fromRGB(20, 15, 30)
GlobalFrame.BorderSizePixel = 0
GlobalFrame.Parent = Content

local GCorner = Instance.new("UICorner")
GCorner.CornerRadius = UDim.new(0, 12)
GCorner.Parent = GlobalFrame

local GStroke = Instance.new("UIStroke")
GStroke.Color = Color3.fromRGB(200, 0, 255)
GStroke.Thickness = 2
GStroke.Parent = GlobalFrame

local GlobalTitle = Instance.new("TextLabel")
GlobalTitle.Size = UDim2.new(1, -20, 0, 30)
GlobalTitle.Position = UDim2.new(0, 10, 0, 5)
GlobalTitle.BackgroundTransparency = 1
GlobalTitle.Text = "🌟 GLOBAL SETTINGS"
GlobalTitle.TextColor3 = Color3.fromRGB(200, 0, 255)
GlobalTitle.TextSize = 16
GlobalTitle.Font = Enum.Font.GothamBold
GlobalTitle.TextXAlignment = Enum.TextXAlignment.Left
GlobalTitle.Parent = GlobalFrame

local VIPLabel = Instance.new("TextLabel")
VIPLabel.Size = UDim2.new(0.5, -10, 0, 22)
VIPLabel.Position = UDim2.new(0, 10, 0, 40)
VIPLabel.BackgroundTransparency = 1
VIPLabel.Text = "👑 VIP ALL Train: x3"
VIPLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
VIPLabel.TextSize = 13
VIPLabel.Font = Enum.Font.GothamBold
VIPLabel.TextXAlignment = Enum.TextXAlignment.Left
VIPLabel.Parent = GlobalFrame

local VIPInput = Instance.new("TextBox")
VIPInput.Size = UDim2.new(0.5, -10, 0, 35)
VIPInput.Position = UDim2.new(0, 10, 0, 65)
VIPInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
VIPInput.BorderSizePixel = 0
VIPInput.Text = tostring(Config.VIPMultiplier)
VIPInput.PlaceholderText = "1-100"
VIPInput.TextColor3 = Color3.fromRGB(255, 215, 0)
VIPInput.TextSize = 18
VIPInput.Font = Enum.Font.GothamBold
VIPInput.Parent = GlobalFrame

local VCorner = Instance.new("UICorner")
VCorner.CornerRadius = UDim.new(0, 8)
VCorner.Parent = VIPInput

local GrowthLabel = Instance.new("TextLabel")
GrowthLabel.Size = UDim2.new(0.5, -10, 0, 22)
GrowthLabel.Position = UDim2.new(0.5, 0, 0, 40)
GrowthLabel.BackgroundTransparency = 1
GrowthLabel.Text = "📈 Growth Rate: x2"
GrowthLabel.TextColor3 = Color3.fromRGB(0, 255, 200)
GrowthLabel.TextSize = 13
GrowthLabel.Font = Enum.Font.GothamBold
GrowthLabel.TextXAlignment = Enum.TextXAlignment.Left
GrowthLabel.Parent = GlobalFrame

local GrowthInput = Instance.new("TextBox")
GrowthInput.Size = UDim2.new(0.5, -10, 0, 35)
GrowthInput.Position = UDim2.new(0.5, 0, 0, 65)
GrowthInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
GrowthInput.BorderSizePixel = 0
GrowthInput.Text = tostring(Config.GlobalGrowth)
GrowthInput.PlaceholderText = "1-100"
GrowthInput.TextColor3 = Color3.fromRGB(0, 255, 200)
GrowthInput.TextSize = 18
GrowthInput.Font = Enum.Font.GothamBold
GrowthInput.Parent = GlobalFrame

local GrCorner = Instance.new("UICorner")
GrCorner.CornerRadius = UDim.new(0, 8)
GrCorner.Parent = GrowthInput

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Size = UDim2.new(1, -20, 0, 22)
SpeedLabel.Position = UDim2.new(0, 10, 0, 105)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.Text = "⚡ Speed Multiplier: x50,000"
SpeedLabel.TextColor3 = Color3.fromRGB(255, 150, 0)
SpeedLabel.TextSize = 13
SpeedLabel.Font = Enum.Font.GothamBold
SpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
SpeedLabel.Parent = GlobalFrame

local SpeedInput = Instance.new("TextBox")
SpeedInput.Size = UDim2.new(1, -20, 0, 28)
SpeedInput.Position = UDim2.new(0, 10, 0, 127)
SpeedInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
SpeedInput.BorderSizePixel = 0
SpeedInput.Text = tostring(Config.SpeedMultiplier)
SpeedInput.PlaceholderText = "1-999999"
SpeedInput.TextColor3 = Color3.fromRGB(255, 150, 0)
SpeedInput.TextSize = 16
SpeedInput.Font = Enum.Font.GothamBold
SpeedInput.Parent = GlobalFrame

local SpCorner = Instance.new("UICorner")
SpCorner.CornerRadius = UDim.new(0, 8)
SpCorner.Parent = SpeedInput

-- Control Buttons
local ActivateBtn = Instance.new("TextButton")
ActivateBtn.Size = UDim2.new(1, 0, 0, 55)
ActivateBtn.Position = UDim2.new(0, 0, 0, 1140)
ActivateBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
ActivateBtn.Text = "🚀 ACTIVATE MULTIPLIER"
ActivateBtn.TextSize = 20
ActivateBtn.Font = Enum.Font.GothamBlack
ActivateBtn.BorderSizePixel = 0
ActivateBtn.Parent = Content

local ActCorner = Instance.new("UICorner")
ActCorner.CornerRadius = UDim.new(0, 12)
ActCorner.Parent = ActivateBtn

local AutoBtn = Instance.new("TextButton")
AutoBtn.Size = UDim2.new(1, 0, 0, 50)
AutoBtn.Position = UDim2.new(0, 0, 0, 1205)
AutoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
AutoBtn.Text = "🤖 AUTO TRAIN: OFF"
AutoBtn.TextSize = 18
AutoBtn.Font = Enum.Font.GothamBold
AutoBtn.BorderSizePixel = 0
AutoBtn.Parent = Content

local AutoCorner = Instance.new("UICorner")
AutoCorner.CornerRadius = UDim.new(0, 12)
AutoCorner.Parent = AutoBtn

local ResetBtn = Instance.new("TextButton")
ResetBtn.Size = UDim2.new(1, 0, 0, 45)
ResetBtn.Position = UDim2.new(0, 0, 0, 1265)
ResetBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 50)
ResetBtn.Text = "🔄 RESET TO DEFAULT"
ResetBtn.TextSize = 16
ResetBtn.Font = Enum.Font.GothamBold
ResetBtn.BorderSizePixel = 0
ResetBtn.Parent = Content

local ResetCorner = Instance.new("UICorner")
ResetCorner.CornerRadius = UDim.new(0, 10)
ResetCorner.Parent = ResetBtn

-- Minimized Frame
local MinFrame = Instance.new("Frame")
MinFrame.Size = UDim2.new(0, 300, 0, 60)
MinFrame.Position = UDim2.new(0.5, -150, 0, 20)
MinFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MinFrame.BorderSizePixel = 0
MinFrame.Visible = false
MinFrame.Active = true
MinFrame.Draggable = true
MinFrame.Parent = ScreenGui

local MFCorner = Instance.new("UICorner")
MFCorner.CornerRadius = UDim.new(0, 14)
MFCorner.Parent = MinFrame

local MFStroke = Instance.new("UIStroke")
MFStroke.Color = Color3.fromRGB(0, 200, 255)
MFStroke.Thickness = 3
MFStroke.Parent = MinFrame

local MinLabel = Instance.new("TextLabel")
MinLabel.Size = UDim2.new(1, -70, 1, 0)
MinLabel.Position = UDim2.new(0, 15, 0, 0)
MinLabel.BackgroundTransparency = 1
MinLabel.Text = "⚡ DELTA"
MinLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
MinLabel.TextSize = 20
MinLabel.Font = Enum.Font.GothamBlack
MinLabel.TextXAlignment = Enum.TextXAlignment.Left
MinLabel.Parent = MinFrame

local MinStatusLbl = Instance.new("TextLabel")
MinStatusLbl.Size = UDim2.new(0, 60, 0, 20)
MinStatusLbl.Position = UDim2.new(1, -125, 0, 20)
MinStatusLbl.BackgroundTransparency = 1
MinStatusLbl.Text = "⚪ OFF"
MinStatusLbl.TextColor3 = Color3.fromRGB(255, 100, 100)
MinStatusLbl.TextSize = 14
MinStatusLbl.Font = Enum.Font.GothamBold
MinStatusLbl.Parent = MinFrame

local RestoreBtn = Instance.new("TextButton")
RestoreBtn.Size = UDim2.new(0, 48, 0, 48)
RestoreBtn.Position = UDim2.new(1, -54, 0, 6)
RestoreBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 255)
RestoreBtn.Text = "□"
RestoreBtn.TextSize = 24
RestoreBtn.Font = Enum.Font.GothamBlack
RestoreBtn.BorderSizePixel = 0
RestoreBtn.Parent = MinFrame

local RCorner = Instance.new("UICorner")
RCorner.CornerRadius = UDim.new(0, 10)
RCorner.Parent = RestoreBtn

-- Format number function
local function FormatNumber(num)
    if num >= 1e18 then return string.format("%.2fQu", num / 1e18)
    elseif num >= 1e15 then return string.format("%.2fQd", num / 1e15)
    elseif num >= 1e12 then return string.format("%.2fT", num / 1e12)
    elseif num >= 1e9 then return string.format("%.2fB", num / 1e9)
    elseif num >= 1e6 then return string.format("%.2fM", num / 1e6)
    elseif num >= 1e3 then return string.format("%.2fK", num / 1e3)
    else return tostring(math.floor(num)) end
end

-- Update Stats Display
local function UpdateStats()
    ArmsLbl.Text = string.format("💪 Arms: +%s", FormatNumber(Stats.ArmsGain))
    LegsLbl.Text = string.format("🦵 Legs: +%s", FormatNumber(Stats.LegsGain))
    BackLbl.Text = string.format("🔨 Back: +%s", FormatNumber(Stats.BackGain))
    AgilityLbl.Text = string.format("⚡ Agility: +%s", FormatNumber(Stats.AgilityGain))
    TotalLbl.Text = string.format("🔥 Total CP: %s", FormatNumber(Stats.TotalCombatPower))
end

-- Input handlers
VIPInput.FocusLost:Connect(function()
    local v = tonumber(VIPInput.Text)
    if v and v >= 1 and v <= 100 then
        Config.VIPMultiplier = math.floor(v)
        VIPLabel.Text = string.format("👑 VIP ALL Train: x%d", Config.VIPMultiplier)
    else
        VIPInput.Text = tostring(Config.VIPMultiplier)
    end
end)

GrowthInput.FocusLost:Connect(function()
    local v = tonumber(GrowthInput.Text)
    if v and v >= 1 and v <= 100 then
        Config.GlobalGrowth = math.floor(v)
        GrowthLabel.Text = string.format("📈 Growth Rate: x%d", Config.GlobalGrowth)
    else
        GrowthInput.Text = tostring(Config.GlobalGrowth)
    end
end)

SpeedInput.FocusLost:Connect(function()
    local v = tonumber(SpeedInput.Text)
    if v and v >= 1 and v <= 999999 then
        Config.SpeedMultiplier = math.floor(v)
        SpeedLabel.Text = string.format("⚡ Speed Multiplier: x%s", FormatNumber(Config.SpeedMultiplier))
    else
        SpeedInput.Text = tostring(Config.SpeedMultiplier)
    end
end)

-- Button handlers
MinBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
    MinFrame.Visible = true
end)

RestoreBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = true
    MinFrame.Visible = false
end)

CloseBtn.MouseButton1Click:Connect(function()
    Config.Enabled = false
    Config.AutoTrain = false
    ScreenGui:Destroy()
end)

ActivateBtn.MouseButton1Click:Connect(function()
    Config.Enabled = not Config.Enabled
    if Config.Enabled then
        ActivateBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
        ActivateBtn.Text = "⛔ DEACTIVATE"
        StatusLbl.Text = "🔥 Status: ACTIVE - MULTIPLYING!"
        StatusLbl.TextColor3 = Color3.fromRGB(0, 255, 100)
        MinStatusLbl.Text = "🔥 ON"
        MinStatusLbl.TextColor3 = Color3.fromRGB(0, 255, 100)
    else
        ActivateBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
        ActivateBtn.Text = "🚀 ACTIVATE MULTIPLIER"
        StatusLbl.Text = "⚪ Status: STANDBY"
        StatusLbl.TextColor3 = Color3.fromRGB(200, 200, 255)
        MinStatusLbl.Text = "⚪ OFF"
        MinStatusLbl.TextColor3 = Color3.fromRGB(255, 100, 100)
    end
end)

AutoBtn.MouseButton1Click:Connect(function()
    Config.AutoTrain = not Config.AutoTrain
    if Config.AutoTrain then
        AutoBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
        AutoBtn.Text = "🤖 AUTO TRAIN: ON"
    else
        AutoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
        AutoBtn.Text = "🤖 AUTO TRAIN: OFF"
    end
end)

ResetBtn.MouseButton1Click:Connect(function()
    Config.ArmsMultiplier = 1000000
    Config.LegsMultiplier = 1000000
    Config.BackMultiplier = 1000000
    Config.AgilityMultiplier = 1000000
    Config.ArmsBonusMultiplier = 50
    Config.LegsBonusMultiplier = 30
    Config.BackBonusMultiplier = 25
    Config.AgilityBonusMultiplier = 40
    Config.VIPMultiplier = 3
    Config.GlobalGrowth = 2
    Config.SpeedMultiplier = 50000
    
    Stats.ArmsGain = 0
    Stats.LegsGain = 0
    Stats.BackGain = 0
    Stats.AgilityGain = 0
    Stats.TotalCombatPower = 0
    Stats.TrainCount = 0
    
    UpdateStats()
    
    -- Reset all inputs
    for _, desc in pairs(Content:GetDescendants()) do
        if desc:IsA("TextBox") then
            if desc.Parent.Name:find("Arms") then
                desc.Text = desc == desc.Parent:FindFirstChild("TextBox") and "1000000" or "50"
            elseif desc.Parent.Name:find("Legs") then
                desc.Text = desc == desc.Parent:FindFirstChild("TextBox") and "1000000" or "30"
            elseif desc.Parent.Name:find("Back") then
                desc.Text = desc == desc.Parent:FindFirstChild("TextBox") and "1000000" or "25"
            elseif desc.Parent.Name:find("Agility") then
                desc.Text = desc == desc.Parent:FindFirstChild("TextBox") and "1000000" or "40"
            end
        end
    end
    
    VIPInput.Text = "3"
    GrowthInput.Text = "2"
    SpeedInput.Text = "50000"
end)

-- Cache remotes
task.spawn(function()
    task.wait(2)
    local TS = ReplicatedStorage:FindFirstChild("TrainSystem")
    if TS then
        local Remote = TS:FindFirstChild("Remote")
        if Remote then
            Cache.SpeedRemote = Remote:FindFirstChild("TrainSpeedHasChanged")
        end
        local Bindable = TS:FindFirstChild("Bindable")
        if Bindable then
            Cache.TrainValue = Bindable:FindFirstChild("PlayerTrainValueHasChanged")
            Cache.CombatPower = Bindable:FindFirstChild("PlayerCombatPowerHasChanged")
            Cache.GetTrainValue = Bindable:FindFirstChild("GetTrainValue")
        end
    end
    
    local TE = ReplicatedStorage:FindFirstChild("TrainEquipment")
    if TE then
        local Remote = TE:FindFirstChild("Remote")
        if Remote then
            Cache.StationaryTrain = Remote:FindFirstChild("ApplyStationaryTrain")
            Cache.MobileTrain = Remote:FindFirstChild("ApplyMobileTrain")
            Cache.BindingEffect = Remote:FindFirstChild("ApplyBindingTrainingEffect")
            Cache.BoostEffect = Remote:FindFirstChild("ApplyBindingTrainingBoostEffect")
        end
    end
    
    print("✅ Delta: Cached", #Cache, "remotes")
end)

-- Calculate multiplied value with all bonuses
local function CalculateMultipliedValue(baseValue, element)
    if not Config.Enabled then return baseValue end
    
    local mult = 1
    local bonus = 1
    local vip = Config.VIPMultiplier
    local growth = Config.GlobalGrowth
    
    -- Get element-specific multipliers
    if element == 1 then -- Arms
        mult = Config.ArmsMultiplier
        bonus = Config.ArmsBonusMultiplier
    elseif element == 2 then -- Legs
        mult = Config.LegsMultiplier
        bonus = Config.LegsBonusMultiplier
    elseif element == 3 then -- Back
        mult = Config.BackMultiplier
        bonus = Config.BackBonusMultiplier
    elseif element == 4 then -- Agility
        mult = Config.AgilityMultiplier
        bonus = Config.AgilityBonusMultiplier
    end
    
    -- Formula: Base × Multiplier × Bonus × VIP × Growth
    local finalValue = baseValue * mult * bonus * vip * growth
    
    -- Update stats
    local gain = finalValue - baseValue
    if element == 1 then
        Stats.ArmsGain = Stats.ArmsGain + gain
    elseif element == 2 then
        Stats.LegsGain = Stats.LegsGain + gain
    elseif element == 3 then
        Stats.BackGain = Stats.BackGain + gain
    elseif element == 4 then
        Stats.AgilityGain = Stats.AgilityGain + gain
    end
    
    Stats.TotalCombatPower = Stats.ArmsGain + Stats.LegsGain + Stats.BackGain + Stats.AgilityGain
    Stats.TrainCount = Stats.TrainCount + 1
    
    return finalValue
end

-- Hook system for multiplying values
local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
    local method = getnamecallmethod()
    local args = {...}
    
    if not Config.Enabled then
        return oldNamecall(self, ...)
    end
    
    -- Hook FireServer for speed
    if method == "FireServer" then
        if self.Name == "TrainSpeedHasChanged" and args[1] then
            local originalSpeed = args[1]
            args[1] = originalSpeed * Config.SpeedMultiplier
        end
        return oldNamecall(self, unpack(args))
    end
    
    -- Hook InvokeServer for training
    if method == "InvokeServer" then
        if self.Name == "ApplyStationaryTrain" or self.Name == "ApplyMobileTrain" then
            local result = oldNamecall(self, unpack(args))
            return result
        end
        
        return oldNamecall(self, unpack(args))
    end
    
    return oldNamecall(self, ...)
end)

-- Hook BindableEvent for train value changes
task.spawn(function()
    task.wait(3)
    if Cache.TrainValue then
        Cache.TrainValue.Event:Connect(function(player, element, newValue, oldValue)
            if Config.Enabled and player == Players.LocalPlayer then
                local gain = newValue - oldValue
                local multipliedGain = CalculateMultipliedValue(gain, element)
                
                -- Fire the modified value
                task.spawn(function()
                    Cache.TrainValue:Fire(player, element, oldValue + multipliedGain, oldValue)
                end)
            end
        end)
    end
end)

-- Auto training loop
task.spawn(function()
    while true do
        task.wait(0.1)
        
        if Config.AutoTrain and Config.Enabled then
            pcall(function()
                -- Train all elements
                if Cache.StationaryTrain then
                    Cache.StationaryTrain:InvokeServer()
                end
                
                if Cache.MobileTrain then
                    Cache.MobileTrain:InvokeServer()
                end
                
                -- Apply effects
                if Cache.BindingEffect then
                    Cache.BindingEffect:InvokeServer("Training_2001", "Emit_2")
                end
                
                if Cache.BoostEffect then
                    Cache.BoostEffect:InvokeServer()
                end
                
                -- Send speed
                if Cache.SpeedRemote then
                    Cache.SpeedRemote:FireServer(Config.SpeedMultiplier * 1000)
                end
            end)
        end
    end
end)

-- Stats update loop
task.spawn(function()
    while task.wait(0.5) do
        if Config.Enabled then
            UpdateStats()
        end
    end
end)

-- Visual effects
task.spawn(function()
    local rotation = 0
    while task.wait(0.03) do
        rotation = (rotation + 2) % 360
        
        if Config.Enabled then
            Stroke.Color = Color3.fromRGB(
                math.floor(128 + 127 * math.sin(rotation * 0.1)),
                math.floor(128 + 127 * math.cos(rotation * 0.15)),
                255
            )
        else
            Stroke.Color = Color3.fromRGB(0, 200, 255)
        end
    end
end)

-- Initialize
UpdateStats()

print("✅ ========================================================")
print("✅ DELTA COMBAT POWER MULTIPLIER LOADED!")
print("✅ ========================================================")
print("")
print("💎 DEFAULT CONFIGURATION:")
print("   • Base Multipliers: x1,000,000 each element")
print("   • Arms Bonus: x50 (like ArmTrainBonus)")
print("   • Legs Bonus: x30")
print("   • Back Bonus: x25 (like BackTrainBonus)")
print("   • Agility Bonus: x40")
print("   • VIP Multiplier: x3 (ALL Train)")
print("   • Growth Rate: x2")
print("   • Speed: x50,000")
print("")
print("🔥 CALCULATION FORMULA:")
print("   Final Value = Base × Multiplier × Bonus × VIP × Growth")
print("")
print("📊 EXAMPLE WITH DEFAULT (x1M base):")
print("   Arms (18 base, x50 bonus):")
print("   = 18 × 1,000,000 × 50 × 3 × 2")
print("   = 5.4 TRILLION per training!")
print("")
print("   Combat Power accumulation:")
print("   • 10 trains = 54 TRILLION")
print("   • 100 trains = 540 TRILLION")
print("   • 1000 trains = 5.4 QUADRILLION")
print("")
print("🚀 EXPONENTIAL GROWTH:")
print("   Set multipliers to 1 BILLION each:")
print("   = 18 × 1,000,000,000 × 50 × 3 × 2")
print("   = 5.4 QUINTILLION per training!")
print("")
print("   Reach SEXTILLION+ in minutes!")
print("")
print("⚡ FEATURES:")
print("   ✅ Separate multipliers for each element")
print("   ✅ Bonus multipliers (TrainBonus simulation)")
print("   ✅ VIP mode (ALL Train boost)")
print("   ✅ Growth rate (exponential increase)")
print("   ✅ Auto training mode")
print("   ✅ Speed multiplier")
print("   ✅ Real-time stats tracking")
print("   ✅ Minimizable GUI")
print("")
print("📝 HOW TO USE:")
print("   1. Adjust multipliers (can go to 999 BILLION!)")
print("   2. Set bonus multipliers for each element")
print("   3. Configure VIP and Growth rate")
print("   4. Click 'ACTIVATE MULTIPLIER'")
print("   5. Enable 'AUTO TRAIN' for automation")
print("   6. Watch your combat power EXPLODE!")
print("")
print("💡 TIPS:")
print("   • Higher bonus = faster growth for that element")
print("   • VIP multiplier affects ALL elements")
print("   • Growth rate compounds over time")
print("   • Balance elements for optimal combat power")
print("")
print("⚠️ MAXIMUM VALUES:")
print("   • Base Multiplier: 999,999,999,999 (999 Billion)")
print("   • Bonus: 1-1000x")
print("   • VIP: 1-100x")
print("   • Growth: 1-100x")
print("")
print("✅ DELTA MULTIPLIER READY - START GROWING!")
print("✅ ========================================================")

-- Additional remote monitoring for automatic gain detection
task.spawn(function()
    task.wait(4)
    
    for _, remote in pairs(ReplicatedStorage:GetDescendants()) do
        if remote:IsA("RemoteEvent") and remote.Name:find("Train") then
            pcall(function()
                remote.OnClientEvent:Connect(function(...)
                    if Config.Enabled then
                        local args = {...}
                        -- Monitor for value changes
                        for i, arg in ipairs(args) do
                            if typeof(arg) == "number" and arg > 0 and arg < 1e15 then
                                -- Detect which element based on value range
                                if arg < 1000 then
                                    -- Likely a training value
                                    local element = math.random(1, 4) -- You can improve this detection
                                    CalculateMultipliedValue(arg, element)
                                end
                            end
                        end
                    end
                end)
            end)
        end
    end
end)
